C51 COMPILER V9.60.0.0   INTERRUPT_LEVEL_TRIGGER                                           11/25/2021 09:09:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INTERRUPT_LEVEL_TRIGGER
OBJECT MODULE PLACED IN .\Objects\Interrupt_level_trigger.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Interrupt_level_trigger.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\Interrupt_level_trigger.lst) TABS(2) OBJECT(.\Objects\Interrupt_level_trigger.obj)

line level    source

   1          /*---------------------------------------------------------- 
   2            Here we are going to program a level triger interrupts 
   3            
   4          ------------------------------------------------------------*/
   5          
   6          
   7          # include<reg51.h>        /* header file for registers addresses */
   8          
   9          void ms_Delay(unsigned int);      /* delay function prototyping */
  10          
  11          sbit sq_wave=P1^3;        /* rename port 1.3 as a square wave for square wave generation */
  12          
  13          sbit Led = P1^4;              /* rename port 1.4 as led for external led configure */
  14          
  15          sbit Switch = P3^2;           /* rename port 3.2 as switch for external switch configuration */
  16          
  17          
  18          
  19          /* ---------------- interrupts subroutine function starts here --------------------*/
  20          void ENT_LED() interrupt 0 
  21          
  22          /* define interrupt function of subroutine interrupt. interrupt 0 is only number for showing 
  23             difference between normal function and interrupt subroutine */
  24          {
  25   1        Led = ~Led;     /* this is for making compliment of led if initially led 1 it will goes 0 or vice versa *
             -/
  26   1        
  27   1        ms_Delay(500);  /* adding some delay */
  28   1      }
  29          
  30          /* ---------------- interrupts subroutine functione ends here --------------------*/
  31          
  32          
  33          
  34          
  35          void ms_Delay(unsigned int time)  /* define delay function */
  36          {
  37   1        
  38   1        unsigned int i,j;
  39   1        
  40   1        for(i=0; i < time; i++)
  41   1        for(j=0; j < 113; j++);
  42   1        
  43   1      }
  44          
  45          
  46          
  47          /*-------------void main start-----------------------------------*/
  48          void main ()
  49          {
  50   1        Switch = 1;               /* switch set 1 for making port 3.2 as a input */
  51   1        
  52   1        Led = 0;                  /* led port 1.4 set to 0 for initially led will off */
  53   1        
C51 COMPILER V9.60.0.0   INTERRUPT_LEVEL_TRIGGER                                           11/25/2021 09:09:07 PAGE 2   

  54   1        IT0 = 0;                  /* setting ITO equal to 0 we are using this hardware for level triggerd
  55   1                                     if ITO = 1 it will be configure for edge trigger */
  56   1        
  57   1        IE = 0x81;                /* enable interrupt INT0 External interrupt zero */
  58   1        
  59   1        
  60   1        /*------------ While loop starts --------------------------------*/
  61   1        
  62   1        while(1)
  63   1        {
  64   2          /* square wave generation code starts */
  65   2          
  66   2          sq_wave = 1;                  /* setting port 1.3 to high */
  67   2      
  68   2          ms_Delay(500);            /* adding some delay */
  69   2        
  70   2          sq_wave = 0;                  /* setting port 1.3 to low */
  71   2        
  72   2          ms_Delay(500);            /* adding some delay */
  73   2        
  74   2          /* square wave generation code ends here */
  75   2        }
  76   1          
  77   1        /*------------ While loop Ends --------------*/
  78   1        
  79   1        
  80   1      }
  81          /*-------------void main ends here-----------------------------------*/
  82          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    122    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
